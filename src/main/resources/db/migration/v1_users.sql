DECLARE
l_version	V$VERSION.BANNER%TYPE;
BEGIN
SELECT REGEXP_REPLACE(BANNER, '^(CORE[[:space:]])([^[:space:]]+)(.+)$', '\2') INTO l_version FROM V$VERSION WHERE BANNER LIKE 'CORE%';
IF TO_NUMBER(REGEXP_REPLACE(l_version, '^([[:digit:]]+)(.+)$', '\1')) < 12 THEN
EXECUTE IMMEDIATE
'CREATE TABLE KOLECKIJ.USERS (' ||
'ID NUMBER(19) NOT NULL, ' ||
'CONSTRAINT USERS_PK PRIMARY KEY (ID) USING INDEX' ||
')'
;
ELSE
EXECUTE IMMEDIATE
'CREATE TABLE KOLECKIJ.USERS (' ||
'ID NUMBER(19) GENERATED BY DEFAULT AS IDENTITY (START WITH 100001 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 NOCYCLE NOORDER) NOT NULL, ' ||
'CONSTRAINT USERS_PK PRIMARY KEY (ID) USING INDEX TABLESPACE TS_RAW_IDX' ||
') TABLESPACE TS_RAW'
;
END IF;
END;
/

ALTER TABLE KOLECKIJ.USERS ADD (
  AUDIT_CD				  TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  AUDIT_MD				  TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  FIRST_NAME  VARCHAR2(200) NULL,
  LASTNAME_NAME  VARCHAR2(200) NULL,
  BIRTH_DATE  VARCHAR2(200) NULL,
  VERSION NUMBER(19) DEFAULT 0,
  PESEL VARCHAR2(11) NOT NULL
)
/
DECLARE
  l_count		number;
  l_version	V$VERSION.BANNER%TYPE;
BEGIN
    SELECT count(1) INTO l_count FROM ALL_SEQUENCES WHERE SEQUENCE_OWNER = 'KOLECKIJ' AND SEQUENCE_NAME = 'USERS_SEQ';
    IF l_count != 0 THEN
      EXECUTE IMMEDIATE 'DROP SEQUENCE KOLECKIJ.USERS_SEQ';
    END IF;
    EXECUTE IMMEDIATE 'CREATE SEQUENCE KOLECKIJ.USERS_SEQ';
    EXECUTE IMMEDIATE
    'CREATE OR REPLACE TRIGGER KOLECKIJ.USERS_TRG ' ||
    'BEFORE INSERT ON KOLECKIJ.USERS ' ||
    'FOR EACH ROW ' ||
    'BEGIN ' ||
    'IF :new.ID IS NULL THEN ' ||
    ':NEW.ID := KOLECKIJ.USERS_SEQ.NEXTVAL; ' ||
    'END IF; ' ||
    'END;'
    ;
END;
/